version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: processing-api
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - TOKEN_EXPIRY=24
      - UPLOAD_DIR=/app/uploads
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-50}
      - GIN_MODE=${GIN_MODE:-release}
      - CLOUDFLARE_WORKER_URL=${CLOUDFLARE_WORKER_URL}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLOUDINARY_FOLDER=${CLOUDINARY_FOLDER}
      - AWS_LAMBDA_FUNCTION=${AWS_LAMBDA_FUNCTION}
      - AWS_LAMBDA_ROLE=${AWS_LAMBDA_ROLE}
      - AWS_VPC_ID=${AWS_VPC_ID}
      - AWS_SUBNET_IDS=${AWS_SUBNET_IDS}
      - AWS_SECURITY_GROUP=${AWS_SECURITY_GROUP}
    volumes:
      - ./uploads:/app/uploads
    networks:
      - processing_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 15s

networks:
  processing_network:
    driver: bridge